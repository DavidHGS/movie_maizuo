{"remainingRequest":"E:\\vue_workspace\\movie\\node_modules\\_vue-loader@15.9.0@vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue_workspace\\movie\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue_workspace\\movie\\node_modules\\_vue-loader@15.9.0@vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_workspace\\movie\\src\\views\\center.vue?vue&type=template&id=288a5f22&","dependencies":[{"path":"E:\\vue_workspace\\movie\\src\\views\\center.vue","mtime":1584364586845},{"path":"E:\\vue_workspace\\movie\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_workspace\\movie\\node_modules\\_vue-loader@15.9.0@vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue_workspace\\movie\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_workspace\\movie\\node_modules\\_vue-loader@15.9.0@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}